{
  "address": "0xFcd688999c25D5493571543137cEeb4fbDb44D02",
  "abi": [
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAcross",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAcross",
          "type": "address"
        }
      ],
      "name": "AcrossUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minAmount",
          "type": "uint256"
        }
      ],
      "name": "MinAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMinModifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinModifier",
          "type": "uint256"
        }
      ],
      "name": "MinModifierUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "uniqueCounter",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "functionName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sourceChainInputToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MsgSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPolygonConnector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPolygonConnector",
          "type": "address"
        }
      ],
      "name": "PolygonConnectorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPolygonTeleBtc",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPolygonTeleBtc",
          "type": "address"
        }
      ],
      "name": "PolygonTeleBtcUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldWrappedNativeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newWrappedNativeToken",
          "type": "address"
        }
      ],
      "name": "WrappedNativeTokenUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ETH_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ONE_HUNDRED_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "across",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchangeConnector",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "bytes",
          "name": "_userScript",
          "type": "bytes"
        },
        {
          "internalType": "enum ScriptTypes",
          "name": "_scriptType",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_lockerLockingScript",
          "type": "bytes"
        },
        {
          "internalType": "int64",
          "name": "_relayerFeePercentage",
          "type": "int64"
        },
        {
          "internalType": "uint256",
          "name": "thirdParty",
          "type": "uint256"
        }
      ],
      "name": "exchangeForBtcAcross",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_polygonTeleBTC",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_across",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wrappedNativeToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_targetChainId",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minModifier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "polygonConnectorProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "polygonTeleBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_across",
          "type": "address"
        }
      ],
      "name": "setAcross",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minModifier",
          "type": "uint256"
        }
      ],
      "name": "setMinModifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_polygonConnectorProxy",
          "type": "address"
        }
      ],
      "name": "setPolygonConnectorProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_polygonTeleBTC",
          "type": "address"
        }
      ],
      "name": "setPolygonTeleBTC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wrappedNativeToken",
          "type": "address"
        }
      ],
      "name": "setWrappedNativeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniqueCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa8137d0964e6a808738eb7b37c13fdc1cd01ff9124cd0124da9d1a2dc67b78f5",
  "receipt": {
    "to": null,
    "from": "0xF560bf3CC92903C4CB2534fc447ac4Adffd49822",
    "contractAddress": "0xFcd688999c25D5493571543137cEeb4fbDb44D02",
    "transactionIndex": 55,
    "gasUsed": "1555461",
    "logsBloom": "0x
    "blockHash": "0xee0db9e77367842804fca2c439e0ebf1ac8ac3a797d90ec3d2efaf68025181f4",
    "transactionHash": "0xa8137d0964e6a808738eb7b37c13fdc1cd01ff9124cd0124da9d1a2dc67b78f5",
    "logs": [],
    "blockNumber": 5844001,
    "cumulativeGasUsed": "11620211",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "42c82863bc8a691491a470dc7f022370",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAcross\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAcross\",\"type\":\"address\"}],\"name\":\"AcrossUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"MinAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinModifier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinModifier\",\"type\":\"uint256\"}],\"name\":\"MinModifierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uniqueCounter\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sourceChainInputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MsgSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPolygonConnector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPolygonConnector\",\"type\":\"address\"}],\"name\":\"PolygonConnectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPolygonTeleBtc\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPolygonTeleBtc\",\"type\":\"address\"}],\"name\":\"PolygonTeleBtcUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldWrappedNativeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newWrappedNativeToken\",\"type\":\"address\"}],\"name\":\"WrappedNativeTokenUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ETH_ADDR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"across\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchangeConnector\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_userScript\",\"type\":\"bytes\"},{\"internalType\":\"enum ScriptTypes\",\"name\":\"_scriptType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_lockerLockingScript\",\"type\":\"bytes\"},{\"internalType\":\"int64\",\"name\":\"_relayerFeePercentage\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"thirdParty\",\"type\":\"uint256\"}],\"name\":\"exchangeForBtcAcross\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_polygonTeleBTC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_across\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrappedNativeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_targetChainId\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minModifier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"polygonConnectorProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"polygonTeleBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_across\",\"type\":\"address\"}],\"name\":\"setAcross\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minModifier\",\"type\":\"uint256\"}],\"name\":\"setMinModifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_polygonConnectorProxy\",\"type\":\"address\"}],\"name\":\"setPolygonConnectorProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_polygonTeleBTC\",\"type\":\"address\"}],\"name\":\"setPolygonTeleBTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wrappedNativeToken\",\"type\":\"address\"}],\"name\":\"setWrappedNativeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniqueCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"emergencyWithdraw(address,address,uint256)\":{\"details\":\"Only owner can call this\"},\"exchangeForBtcAcross(address,address,uint256[],address[],bytes,uint8,bytes,int64,uint256)\":{\"params\":{\"_amounts\":\"[inputTokenAmount, teleBTCAmount]\",\"_exchangeConnector\":\"Address of exchange connector to be used\",\"_lockerLockingScript\":\"of locker that should execute the burn request\",\"_path\":\"of exchanging inputToken to teleBTC (these are Polygon token addresses, so _path[0] != _token)\",\"_relayerFeePercentage\":\"Fee percentage for relayer\",\"_scriptType\":\"User script type\",\"_token\":\"Address of input token (on the current chain)\",\"_userScript\":\"User script hash\",\"thirdParty\":\"Id of third party\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMinAmount(address,uint256)\":{\"details\":\"Exchanging below the min amount is not possible since withdrawing       funds in the case of failure becomes impossible (due to Across bridge fee)\"},\"setMinModifier(uint256)\":{\"details\":\"In the case of network fee changes, instead of       updating min amount for all tokens, we only update this modifier\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyWithdraw(address,address,uint256)\":{\"notice\":\"Withdraws tokens in the emergency case\"},\"exchangeForBtcAcross(address,address,uint256[],address[],bytes,uint8,bytes,int64,uint256)\":{\"notice\":\"Requests exchanging token for BTC\"},\"setAcross(address)\":{\"notice\":\"Setter for Across\"},\"setMinAmount(address,uint256)\":{\"notice\":\"Setter for min exchange amount of a token\"},\"setMinModifier(uint256)\":{\"notice\":\"Setter for min amount modifier\"},\"setPolygonConnectorProxy(address)\":{\"notice\":\"Setter for PolygonConnectorProxy\"},\"setPolygonTeleBTC(address)\":{\"notice\":\"Setter for PolygonTeleBTC\"},\"setWrappedNativeToken(address)\":{\"notice\":\"Setter for WrappedNativeToken\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/routers/EthConnectorLogic.sol\":\"EthConnectorLogic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@teleportdao/btc-evm-bridge/contracts/types/ScriptTypesEnum.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.4;\\n\\n    enum ScriptTypes {\\n        P2PK, // 32 bytes\\n        P2PKH, // 20 bytes        \\n        P2SH, // 20 bytes          \\n        P2WPKH, // 20 bytes          \\n        P2WSH, // 32 bytes\\n        P2TR // 32 bytes               \\n    }\",\"keccak256\":\"0x6285b8e2459ab9dda3d9beacad436428979224c9bef81fbf26d84a7994b573d1\",\"license\":\"MIT\"},\"contracts/routers/EthConnectorLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"./EthConnectorStorage.sol\\\";\\nimport \\\"./interfaces/IEthConnectorLogic.sol\\\";\\n\\ncontract EthConnectorLogic is IEthConnectorLogic, EthConnectorStorage, \\n    OwnableUpgradeable, ReentrancyGuardUpgradeable, PausableUpgradeable {\\n\\n    error ZeroAddress();\\n\\n    modifier nonZeroAddress(address _address) {\\n        if (_address == address(0))\\n            revert ZeroAddress();\\n        _;\\n    }\\n\\n    function initialize(\\n        address _polygonTeleBTC,\\n        address _across,\\n        address _wrappedNativeToken,\\n        uint _targetChainId\\n    ) public initializer {\\n        OwnableUpgradeable.__Ownable_init();\\n        ReentrancyGuardUpgradeable.__ReentrancyGuard_init();\\n        PausableUpgradeable.__Pausable_init();\\n        \\n        _setPolygonTeleBTC(_polygonTeleBTC);\\n        _setAcross(_across);\\n        _setWrappedNativeToken(_wrappedNativeToken);\\n        targetChainId = _targetChainId;\\n        _setMinModifier(ONE_HUNDRED_PERCENT);\\n        uniqueCounter = 0;\\n    }\\n\\n    /// @notice Setter for min exchange amount of a token\\n    /// @dev Exchanging below the min amount is not possible since withdrawing \\n    ///      funds in the case of failure becomes impossible (due to Across bridge fee)\\n    function setMinAmount(address _token, uint _minAmount) external override onlyOwner nonZeroAddress(_token){\\n        _setMinAmount(_token, _minAmount);\\n    }\\n\\n    /// @notice Setter for min amount modifier\\n    /// @dev In the case of network fee changes, instead of \\n    ///      updating min amount for all tokens, we only update this modifier\\n    function setMinModifier(uint _minModifier) external override onlyOwner {\\n        _setMinModifier(_minModifier);\\n    }\\n\\n    /// @notice Setter for Across\\n    function setAcross(address _across) external override onlyOwner {\\n        _setAcross(_across);\\n    }\\n\\n    /// @notice Setter for PolygonConnectorProxy\\n    function setPolygonConnectorProxy(address _polygonConnectorProxy) external override onlyOwner {\\n        _setPolygonConnectorProxy(_polygonConnectorProxy);\\n    }\\n\\n    /// @notice Setter for PolygonTeleBTC\\n    function setPolygonTeleBTC(address _polygonTeleBTC) external override onlyOwner {\\n        _setPolygonTeleBTC(_polygonTeleBTC);\\n    }\\n\\n    /// @notice Setter for WrappedNativeToken\\n    function setWrappedNativeToken(address _wrappedNativeToken) external override onlyOwner {\\n        _setWrappedNativeToken(_wrappedNativeToken);\\n    }\\n\\n    // \\n\\n    function _setMinAmount(address _token, uint _minAmount) nonZeroAddress(_token) private {\\n        emit MinAmountUpdated(\\n            _token,\\n            _minAmount\\n        );\\n\\n        minAmounts[_token] = _minAmount;\\n    }\\n\\n    function _setMinModifier(uint _minModifier) private {\\n        emit MinModifierUpdated(\\n            minModifier,\\n            _minModifier\\n        );\\n\\n        minModifier = _minModifier;\\n    }\\n\\n    function _setAcross(address _across) private nonZeroAddress(_across){\\n        emit AcrossUpdated(\\n            across,\\n            _across\\n        );\\n\\n        across = _across;\\n    }\\n\\n    function _setPolygonConnectorProxy(address _polygonConnectorProxy) private nonZeroAddress(_polygonConnectorProxy){\\n        emit PolygonConnectorUpdated(\\n            polygonConnectorProxy,\\n            _polygonConnectorProxy\\n        );\\n\\n        polygonConnectorProxy = _polygonConnectorProxy;\\n    }\\n\\n    function _setPolygonTeleBTC(address _polygonTeleBTC) private nonZeroAddress(_polygonTeleBTC){\\n        emit PolygonTeleBtcUpdated(\\n            polygonTeleBTC,\\n            _polygonTeleBTC\\n        );\\n        \\n        polygonTeleBTC = _polygonTeleBTC;\\n    }\\n\\n    function _setWrappedNativeToken(address _wrappedNativeToken) private nonZeroAddress(_wrappedNativeToken){\\n        emit WrappedNativeTokenUpdated(\\n            wrappedNativeToken,\\n            _wrappedNativeToken\\n        );\\n        \\n        wrappedNativeToken = _wrappedNativeToken;\\n    }\\n\\n    /// @notice Withdraws tokens in the emergency case\\n    /// @dev Only owner can call this\\n    function emergencyWithdraw(\\n        address _token,\\n        address _to,\\n        uint _amount\\n    ) external override onlyOwner {\\n        if (_token == ETH_ADDR) \\n            _to.call{value: _amount}(\\\"\\\");\\n        else\\n            IERC20(_token).transfer(_to, _amount);\\n    }\\n\\n    /// @notice Requests exchanging token for BTC\\n    /// @param _token Address of input token (on the current chain)\\n    /// @param _exchangeConnector Address of exchange connector to be used\\n    /// @param _amounts [inputTokenAmount, teleBTCAmount]\\n    /// @param _path of exchanging inputToken to teleBTC (these are Polygon token addresses, so _path[0] != _token)\\n    /// @param _userScript User script hash\\n    /// @param _scriptType User script type\\n    /// @param _lockerLockingScript\\tof locker that should execute the burn request\\n    /// @param _relayerFeePercentage Fee percentage for relayer\\n    /// @param thirdParty Id of third party\\n    function exchangeForBtcAcross(\\n        address _token,\\n        address _exchangeConnector,\\n        uint[] calldata _amounts,\\n        address[] calldata _path,\\n        bytes memory _userScript,\\n        ScriptTypes _scriptType,\\n        bytes calldata _lockerLockingScript,\\n        int64 _relayerFeePercentage,\\n        uint thirdParty\\n\\t) external payable override nonReentrant() {\\n\\n        _checkRequest(_token, _amounts, _path);\\n\\n        // Sends msg to Polygon\\n        \\n        bytes memory message = abi.encode(\\n            \\\"exchangeForBtcAcross\\\",\\n            uniqueCounter,\\n            msg.sender,\\n            _exchangeConnector, \\n            _amounts[1], // Min output amount to receive\\n            _path, \\n            _userScript,\\n            _scriptType,\\n            _lockerLockingScript,\\n            thirdParty\\n        );\\n        \\n        emit MsgSent(\\n            uniqueCounter,\\n            \\\"putBidAcross\\\",\\n            message,\\n            _token,\\n            _amounts[0]\\n        );\\n\\n        uniqueCounter++;\\n\\n        _sendMsgUsingAcross(\\n            _token,\\n            _amounts[0],\\n            message,\\n            _relayerFeePercentage\\n        );\\n    }\\n\\n    /// @notice Sends tokens and message using Across bridge\\n    function _sendMsgUsingAcross(\\n        address _token,\\n        uint _amount,\\n        bytes memory _message,\\n        int64 _relayerFeePercentage\\n    ) internal {\\n\\n        if (_token == ETH_ADDR) {\\n            require(msg.value == _amount, \\\"EthManagerLogic: wrong value\\\");\\n            _token = wrappedNativeToken;\\n        } else {\\n            require(msg.value == 0, \\\"EthManagerLogic: wrong value\\\");\\n\\n            // Transfers tokens from user to contract\\n            IERC20(_token).transferFrom(\\n                msg.sender,\\n                address(this),\\n                _amount\\n            );\\n\\n            IERC20(_token).approve(\\n                across, \\n                _amount\\n            );\\n        }\\n\\n        // Calling across for transferring token and msg\\n        Address.functionCallWithValue(\\n            across,\\n            abi.encodeWithSignature(\\n                \\\"deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)\\\",\\n                polygonConnectorProxy,\\n                _token,\\n                _amount,\\n                targetChainId,\\n                _relayerFeePercentage,\\n                uint32(block.timestamp),\\n                _message,\\n                115792089237316195423570985008687907853269984665640564039457584007913129639935\\n            ),\\n            msg.value\\n        );  \\n    }\\n\\n    /// @notice Checks validity of request\\n    /// @dev Token should be acceptable, input amount should be >= min, \\n    ///      last token of path should be teleBTC, and amounts array length should be 2 \\n    function _checkRequest(\\n        address _token,\\n        uint[] calldata _amounts,\\n        address[] calldata _path\\n    ) internal view {\\n        // Checks that amount is greater than min\\n        // Note: if the amount is lower than min, \\n        //       it may become impossible to withdraw funds in future\\n        require(\\n            minAmounts[_token] > 0,\\n            \\\"EthManagerLogic: token not supported\\\"\\n        );\\n        require(\\n            _amounts[0] >= (minAmounts[_token] * minModifier / ONE_HUNDRED_PERCENT),\\n            \\\"EthManagerLogic: low amount\\\"\\n        );\\n\\n        //TODO remove this check\\n        require(\\n            _path[_path.length - 1] == polygonTeleBTC, \\n            \\\"EthManagerLogic: invalid path\\\"\\n        );\\n\\n        require(_amounts.length == 2, \\\"EthManagerLogic: wrong amounts\\\");\\n    }\\n\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x92cde0daa1090752dcfb15202de813b76050bce7a8fc4aa4f7b82e46acc683d2\",\"license\":\"MIT\"},\"contracts/routers/EthConnectorStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.4;\\n\\nimport \\\"./interfaces/IEthConnectorLogic.sol\\\";\\n\\nabstract contract EthConnectorStorage {\\n    \\n    uint constant public ONE_HUNDRED_PERCENT = 10000;\\n    address constant public ETH_ADDR = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n    // ^ Native token representative\\n\\n    address public across; // Across bridge\\n    address public polygonConnectorProxy;\\n    address public polygonTeleBTC;\\n    uint public targetChainId;\\n    address public wrappedNativeToken;\\n\\n    // This mapping specifies the min biding amount for each token\\n    mapping(address => uint) public minAmounts;\\n\\n    // Initial value is 10000 (owner can change it) \\n    uint public minModifier;\\n\\n    uint public uniqueCounter;\\n}\",\"keccak256\":\"0xdd2e0a5b6751105efe0897eea00582e4f20c8725bfb6aff9fa820a4a717cea0a\",\"license\":\"MIT\"},\"contracts/routers/interfaces/IEthConnectorLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.4;\\n\\nimport \\\"@teleportdao/btc-evm-bridge/contracts/types/ScriptTypesEnum.sol\\\";\\n\\ninterface IEthConnectorLogic {\\n\\n    // Events\\n\\n    event MsgSent(\\n        uint uniqueCounter,\\n        string functionName,\\n        bytes data,\\n        address sourceChainInputToken, \\n        uint amount\\n    );\\n\\n    event MinAmountUpdated(\\n        address token, \\n        uint minAmount\\n    );\\n\\n    event MinModifierUpdated( \\n        uint oldMinModifier,\\n        uint newMinModifier\\n    );\\n\\n    event AcrossUpdated( \\n        address oldAcross,\\n        address newAcross\\n    );\\n\\n    event PolygonConnectorUpdated( \\n        address oldPolygonConnector,\\n        address newPolygonConnector\\n    );\\n\\n    event PolygonTeleBtcUpdated( \\n        address oldPolygonTeleBtc,\\n        address newPolygonTeleBtc\\n    );\\n\\n    event WrappedNativeTokenUpdated( \\n        address oldWrappedNativeToken,\\n        address newWrappedNativeToken\\n    );\\n\\n\\n    function setAcross(address _across) external;\\n\\n    function setPolygonConnectorProxy(address _polygonConnector) external;\\n\\n    function setMinAmount(address _token, uint _minAmount) external;\\n\\n    function setMinModifier(uint _minModifier) external;\\n\\n    function setPolygonTeleBTC(address _polygonTeleBTC) external;\\n\\n    function setWrappedNativeToken(address _wrappedNativeToken) external;\\n\\n    function exchangeForBtcAcross(\\n        address _token,\\n        address _exchangeConnector,\\n        uint[] calldata _amounts,\\n        address[] calldata _path,\\n        bytes memory _userScript,\\n        ScriptTypes _scriptType,\\n        bytes calldata _lockerLockingScript,\\n        int64 _relayerFeePercentage,\\n        uint thirdParty\\n\\t) external payable;\\n\\n    function emergencyWithdraw(\\n        address _token,\\n        address _to,\\n        uint _amount\\n    ) external;\\n\\n}\",\"keccak256\":\"0xbb8ceabf806c1a717f10993c58315ad07dbc4454bc2c35b81471b201bbb93598\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611b29806100206000396000f3fe6080604052600436106101145760003560e01c8063146ffb261461012057806317fcb39b1461014957806323d859a014610181578063292c1d92146101a35780635c975abb146101c357806361be10f2146101e65780636f84d4b314610206578063715018a6146102195780637753f47b1461022e5780637c9ae564146102565780638820bb561461026c5780638da5cb5b1461028c5780639c5e52d5146102a1578063ac632db2146102ce578063be0367b8146102ee578063cf756fdf1461030e578063d4dfc8c31461032e578063d5708d5a14610344578063da058ae314610364578063dd0081c714610384578063e63ea4081461039a578063ec464fde146103ba578063f2fde38b146103da57600080fd5b3661011b57005b600080fd5b34801561012c57600080fd5b5061013660035481565b6040519081526020015b60405180910390f35b34801561015557600080fd5b50600454610169906001600160a01b031681565b6040516001600160a01b039091168152602001610140565b34801561018d57600080fd5b506101a161019c3660046114cc565b6103fa565b005b3480156101af57600080fd5b50600054610169906001600160a01b031681565b3480156101cf57600080fd5b50609f5460ff166040519015158152602001610140565b3480156101f257600080fd5b506101a16102013660046114cc565b61040e565b6101a1610214366004611530565b61041f565b34801561022557600080fd5b506101a161055c565b34801561023a57600080fd5b5061016973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561026257600080fd5b5061013660065481565b34801561027857600080fd5b506101a16102873660046116d0565b610570565b34801561029857600080fd5b50610169610581565b3480156102ad57600080fd5b506101366102bc3660046114cc565b60056020526000908152604090205481565b3480156102da57600080fd5b50600154610169906001600160a01b031681565b3480156102fa57600080fd5b50600254610169906001600160a01b031681565b34801561031a57600080fd5b506101a16103293660046114e6565b610590565b34801561033a57600080fd5b5061013660075481565b34801561035057600080fd5b506101a161035f366004611687565b6106ea565b34801561037057600080fd5b506101a161037f3660046114cc565b610729565b34801561039057600080fd5b5061013661271081565b3480156103a657600080fd5b506101a16103b536600461164c565b61073a565b3480156103c657600080fd5b506101a16103d53660046114cc565b610843565b3480156103e657600080fd5b506101a16103f53660046114cc565b610854565b6104026108ca565b61040b81610929565b50565b6104166108ca565b61040b816109bb565b610427610a4d565b6104348c8b8b8b8b610aa7565b6000600754338d8d8d600181811061045c57634e487b7160e01b600052603260045260246000fd5b905060200201358c8c8c8c8c8c8b6040516020016104849b9a999897969594939291906118a4565b60405160208183030381529060405290507f1d8f6a1003d585cfcda68c8a9a5dfc25915d8c9d21e03f18f8a7916d91e8ddc7600754828f8e8e60008181106104dc57634e487b7160e01b600052603260045260246000fd5b905060200201356040516104f394939291906119a9565b60405180910390a16007805490600061050b83611a83565b91905055506105438d8c8c600081811061053557634e487b7160e01b600052603260045260246000fd5b905060200201358386610cb0565b5061054e6001606d55565b505050505050505050505050565b6105646108ca565b61056e6000610ea4565b565b6105786108ca565b61040b81610ef6565b603b546001600160a01b031690565b600854610100900460ff16158080156105b05750600854600160ff909116105b806105ca5750303b1580156105ca575060085460ff166001145b6106325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6008805460ff191660011790558015610655576008805461ff0019166101001790555b61065d610f37565b610665610f66565b61066d610f95565b61067685610fc4565b61067f846109bb565b61068883611056565b6003829055610698612710610ef6565b600060075580156106e3576008805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6106f26108ca565b816001600160a01b03811661071a5760405163d92e233d60e01b815260040160405180910390fd5b61072483836110e8565b505050565b6107316108ca565b61040b81611056565b6107426108ca565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156107bd576040516001600160a01b038316908290600081818185875af1925050503d80600081146107b0576040519150601f19603f3d011682016040523d82523d6000602084013e6107b5565b606091505b505050505050565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb906107eb9085908590600401611842565b602060405180830381600087803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083d91906116b0565b50505050565b61084b6108ca565b61040b81610fc4565b61085c6108ca565b6001600160a01b0381166108c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610629565b61040b81610ea4565b336108d3610581565b6001600160a01b03161461056e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610629565b806001600160a01b0381166109515760405163d92e233d60e01b815260040160405180910390fd5b6001546040517f67ab9e5f2215e43392826b5e9e4e0bf6679e6ea91f307b3162025327bcee07f391610990916001600160a01b039091169085906117c1565b60405180910390a150600180546001600160a01b0319166001600160a01b0392909216919091179055565b806001600160a01b0381166109e35760405163d92e233d60e01b815260040160405180910390fd5b6000546040517f06e5f2ca1234f717a2031f662608c02182d4f8bdc3dab013ec4c04eb9755313291610a22916001600160a01b039091169085906117c1565b60405180910390a150600080546001600160a01b0319166001600160a01b0392909216919091179055565b6002606d541415610aa05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610629565b6002606d55565b6001600160a01b038516600090815260056020526040902054610b185760405162461bcd60e51b8152602060048201526024808201527f4574684d616e616765724c6f6769633a20746f6b656e206e6f7420737570706f6044820152631c9d195960e21b6064820152608401610629565b6006546001600160a01b03861660009081526005602052604090205461271091610b4191611a21565b610b4b9190611a01565b84846000818110610b6c57634e487b7160e01b600052603260045260246000fd5b905060200201351015610bbf5760405162461bcd60e51b815260206004820152601b60248201527a115d1a13585b9859d95c931bd9da58ce881b1bddc8185b5bdd5b9d602a1b6044820152606401610629565b6002546001600160a01b03168282610bd8600182611a40565b818110610bf557634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610c0a91906114cc565b6001600160a01b031614610c605760405162461bcd60e51b815260206004820152601d60248201527f4574684d616e616765724c6f6769633a20696e76616c696420706174680000006044820152606401610629565b600283146106e35760405162461bcd60e51b815260206004820152601e60248201527f4574684d616e616765724c6f6769633a2077726f6e6720616d6f756e747300006044820152606401610629565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610d0757823414610cf45760405162461bcd60e51b81526004016106299061186e565b6004546001600160a01b03169350610e34565b3415610d255760405162461bcd60e51b81526004016106299061186e565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd90606401602060405180830381600087803b158015610d7357600080fd5b505af1158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab91906116b0565b5060005460405163095ea7b360e01b81526001600160a01b038681169263095ea7b392610de092909116908790600401611842565b602060405180830381600087803b158015610dfa57600080fd5b505af1158015610e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3291906116b0565b505b6000546001546003546040516106e3936001600160a01b0390811693610e6d9391169189918991889042908b90600019906024016117db565b60408051601f198184030181529190526020810180516001600160e01b0316631186ec3360e01b17905234611166565b6001606d55565b603b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460408051918252602082018390527f5c1bebaca9e5461f515d3939a9ba6c89d486e0b3130fd5f1613bea8312a7349f910160405180910390a1600655565b600854610100900460ff16610f5e5760405162461bcd60e51b81526004016106299061195e565b61056e611196565b600854610100900460ff16610f8d5760405162461bcd60e51b81526004016106299061195e565b61056e6111c6565b600854610100900460ff16610fbc5760405162461bcd60e51b81526004016106299061195e565b61056e6111ed565b806001600160a01b038116610fec5760405163d92e233d60e01b815260040160405180910390fd5b6002546040517fcce6a91bc875435f68407f052fabbcb2cfda2ae841ac4816acf552714fb30adf9161102b916001600160a01b039091169085906117c1565b60405180910390a150600280546001600160a01b0319166001600160a01b0392909216919091179055565b806001600160a01b03811661107e5760405163d92e233d60e01b815260040160405180910390fd5b6004546040517fffd9582901c27177dbd18194ae8017f10d8b21f98a0da2ea5197e0b20dc13d70916110bd916001600160a01b039091169085906117c1565b60405180910390a150600480546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0381166111105760405163d92e233d60e01b815260040160405180910390fd5b7f661459273999943a19efbd948eb50b734e8c71b010cc26221bd1efeffd1dccb58383604051611141929190611842565b60405180910390a1506001600160a01b03909116600090815260056020526040902055565b606061118c848484604051806060016040528060298152602001611acb60299139611220565b90505b9392505050565b600854610100900460ff166111bd5760405162461bcd60e51b81526004016106299061195e565b61056e33610ea4565b600854610100900460ff16610e9d5760405162461bcd60e51b81526004016106299061195e565b600854610100900460ff166112145760405162461bcd60e51b81526004016106299061195e565b609f805460ff19169055565b6060824710156112815760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610629565b843b6112cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610629565b600080866001600160a01b031685876040516112eb91906117a5565b60006040518083038185875af1925050503d8060008114611328576040519150601f19603f3d011682016040523d82523d6000602084013e61132d565b606091505b509150915061133d828286611348565b979650505050505050565b6060831561135757508161118f565b8251156113675782518084602001fd5b8160405162461bcd60e51b8152600401610629919061185b565b80356001600160a01b038116811461139857600080fd5b919050565b60008083601f8401126113ae578081fd5b5081356001600160401b038111156113c4578182fd5b6020830191508360208260051b85010111156113df57600080fd5b9250929050565b60008083601f8401126113f7578182fd5b5081356001600160401b0381111561140d578182fd5b6020830191508360208285010111156113df57600080fd5b600082601f830112611435578081fd5b81356001600160401b038082111561144f5761144f611ab4565b604051601f8301601f19908116603f0116810190828211818310171561147757611477611ab4565b8160405283815286602085880101111561148f578485fd5b8360208701602083013792830160200193909352509392505050565b80356006811061139857600080fd5b8035600781900b811461139857600080fd5b6000602082840312156114dd578081fd5b61118f82611381565b600080600080608085870312156114fb578283fd5b61150485611381565b935061151260208601611381565b925061152060408601611381565b9396929550929360600135925050565b6000806000806000806000806000806000806101208d8f031215611552578788fd5b61155b8d611381565b9b5061156960208e01611381565b9a506001600160401b0360408e01351115611582578788fd5b6115928e60408f01358f0161139d565b909a5098506001600160401b0360608e013511156115ae578788fd5b6115be8e60608f01358f0161139d565b90985096506001600160401b0360808e013511156115da578586fd5b6115ea8e60808f01358f01611425565b95506115f860a08e016114ab565b94506001600160401b0360c08e01351115611611578384fd5b6116218e60c08f01358f016113e6565b909450925061163260e08e016114ba565b91506101008d013590509295989b509295989b509295989b565b600080600060608486031215611660578283fd5b61166984611381565b925061167760208501611381565b9150604084013590509250925092565b60008060408385031215611699578182fd5b6116a283611381565b946020939093013593505050565b6000602082840312156116c1578081fd5b8151801515811461118f578182fd5b6000602082840312156116e1578081fd5b5035919050565b81835260006020808501945082825b85811015611723576001600160a01b0361171083611381565b16875295820195908201906001016116f7565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845261176f816020860160208601611a57565b601f01601f19169290920160200192915050565b600681106117a157634e487b7160e01b600052602160045260246000fd5b9052565b600082516117b7818460208701611a57565b9190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b038981168252881660208201526040810187905260608101869052600785900b608082015263ffffffff841660a082015261010060c0820181905260009061182c83820186611757565b9150508260e08301529998505050505050505050565b6001600160a01b03929092168252602082015260400190565b60208152600061118f6020830184611757565b6020808252601c908201527b4574684d616e616765724c6f6769633a2077726f6e672076616c756560201b604082015260600190565b6101408082526014908201527365786368616e6765466f724274634163726f737360601b610160820152602081018c90526001600160a01b038b811660408301528a1660608201526080810189905261018060a0820181905260009061190d8184018a8c6116e8565b905082810360c08401526119218189611757565b905061193060e0840188611783565b82810361010084015261194481868861172e565b915050826101208301529c9b505050505050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b84815260a06020820152600c60a08201526b7075744269644163726f737360a01b60c082015260e0604082015260006119e560e0830186611757565b6001600160a01b03949094166060830152506080015292915050565b600082611a1c57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611a3b57611a3b611a9e565b500290565b600082821015611a5257611a52611a9e565b500390565b60005b83811015611a72578181015183820152602001611a5a565b8381111561083d5750506000910152565b6000600019821415611a9757611a97611a9e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a2646970667358221220005971895501e3c59cf8d7c2b30a47582f09d7076054906247510e9d1427403d64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c8063146ffb261461012057806317fcb39b1461014957806323d859a014610181578063292c1d92146101a35780635c975abb146101c357806361be10f2146101e65780636f84d4b314610206578063715018a6146102195780637753f47b1461022e5780637c9ae564146102565780638820bb561461026c5780638da5cb5b1461028c5780639c5e52d5146102a1578063ac632db2146102ce578063be0367b8146102ee578063cf756fdf1461030e578063d4dfc8c31461032e578063d5708d5a14610344578063da058ae314610364578063dd0081c714610384578063e63ea4081461039a578063ec464fde146103ba578063f2fde38b146103da57600080fd5b3661011b57005b600080fd5b34801561012c57600080fd5b5061013660035481565b6040519081526020015b60405180910390f35b34801561015557600080fd5b50600454610169906001600160a01b031681565b6040516001600160a01b039091168152602001610140565b34801561018d57600080fd5b506101a161019c3660046114cc565b6103fa565b005b3480156101af57600080fd5b50600054610169906001600160a01b031681565b3480156101cf57600080fd5b50609f5460ff166040519015158152602001610140565b3480156101f257600080fd5b506101a16102013660046114cc565b61040e565b6101a1610214366004611530565b61041f565b34801561022557600080fd5b506101a161055c565b34801561023a57600080fd5b5061016973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561026257600080fd5b5061013660065481565b34801561027857600080fd5b506101a16102873660046116d0565b610570565b34801561029857600080fd5b50610169610581565b3480156102ad57600080fd5b506101366102bc3660046114cc565b60056020526000908152604090205481565b3480156102da57600080fd5b50600154610169906001600160a01b031681565b3480156102fa57600080fd5b50600254610169906001600160a01b031681565b34801561031a57600080fd5b506101a16103293660046114e6565b610590565b34801561033a57600080fd5b5061013660075481565b34801561035057600080fd5b506101a161035f366004611687565b6106ea565b34801561037057600080fd5b506101a161037f3660046114cc565b610729565b34801561039057600080fd5b5061013661271081565b3480156103a657600080fd5b506101a16103b536600461164c565b61073a565b3480156103c657600080fd5b506101a16103d53660046114cc565b610843565b3480156103e657600080fd5b506101a16103f53660046114cc565b610854565b6104026108ca565b61040b81610929565b50565b6104166108ca565b61040b816109bb565b610427610a4d565b6104348c8b8b8b8b610aa7565b6000600754338d8d8d600181811061045c57634e487b7160e01b600052603260045260246000fd5b905060200201358c8c8c8c8c8c8b6040516020016104849b9a999897969594939291906118a4565b60405160208183030381529060405290507f1d8f6a1003d585cfcda68c8a9a5dfc25915d8c9d21e03f18f8a7916d91e8ddc7600754828f8e8e60008181106104dc57634e487b7160e01b600052603260045260246000fd5b905060200201356040516104f394939291906119a9565b60405180910390a16007805490600061050b83611a83565b91905055506105438d8c8c600081811061053557634e487b7160e01b600052603260045260246000fd5b905060200201358386610cb0565b5061054e6001606d55565b505050505050505050505050565b6105646108ca565b61056e6000610ea4565b565b6105786108ca565b61040b81610ef6565b603b546001600160a01b031690565b600854610100900460ff16158080156105b05750600854600160ff909116105b806105ca5750303b1580156105ca575060085460ff166001145b6106325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6008805460ff191660011790558015610655576008805461ff0019166101001790555b61065d610f37565b610665610f66565b61066d610f95565b61067685610fc4565b61067f846109bb565b61068883611056565b6003829055610698612710610ef6565b600060075580156106e3576008805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6106f26108ca565b816001600160a01b03811661071a5760405163d92e233d60e01b815260040160405180910390fd5b61072483836110e8565b505050565b6107316108ca565b61040b81611056565b6107426108ca565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156107bd576040516001600160a01b038316908290600081818185875af1925050503d80600081146107b0576040519150601f19603f3d011682016040523d82523d6000602084013e6107b5565b606091505b505050505050565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb906107eb9085908590600401611842565b602060405180830381600087803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083d91906116b0565b50505050565b61084b6108ca565b61040b81610fc4565b61085c6108ca565b6001600160a01b0381166108c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610629565b61040b81610ea4565b336108d3610581565b6001600160a01b03161461056e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610629565b806001600160a01b0381166109515760405163d92e233d60e01b815260040160405180910390fd5b6001546040517f67ab9e5f2215e43392826b5e9e4e0bf6679e6ea91f307b3162025327bcee07f391610990916001600160a01b039091169085906117c1565b60405180910390a150600180546001600160a01b0319166001600160a01b0392909216919091179055565b806001600160a01b0381166109e35760405163d92e233d60e01b815260040160405180910390fd5b6000546040517f06e5f2ca1234f717a2031f662608c02182d4f8bdc3dab013ec4c04eb9755313291610a22916001600160a01b039091169085906117c1565b60405180910390a150600080546001600160a01b0319166001600160a01b0392909216919091179055565b6002606d541415610aa05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610629565b6002606d55565b6001600160a01b038516600090815260056020526040902054610b185760405162461bcd60e51b8152602060048201526024808201527f4574684d616e616765724c6f6769633a20746f6b656e206e6f7420737570706f6044820152631c9d195960e21b6064820152608401610629565b6006546001600160a01b03861660009081526005602052604090205461271091610b4191611a21565b610b4b9190611a01565b84846000818110610b6c57634e487b7160e01b600052603260045260246000fd5b905060200201351015610bbf5760405162461bcd60e51b815260206004820152601b60248201527a115d1a13585b9859d95c931bd9da58ce881b1bddc8185b5bdd5b9d602a1b6044820152606401610629565b6002546001600160a01b03168282610bd8600182611a40565b818110610bf557634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610c0a91906114cc565b6001600160a01b031614610c605760405162461bcd60e51b815260206004820152601d60248201527f4574684d616e616765724c6f6769633a20696e76616c696420706174680000006044820152606401610629565b600283146106e35760405162461bcd60e51b815260206004820152601e60248201527f4574684d616e616765724c6f6769633a2077726f6e6720616d6f756e747300006044820152606401610629565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610d0757823414610cf45760405162461bcd60e51b81526004016106299061186e565b6004546001600160a01b03169350610e34565b3415610d255760405162461bcd60e51b81526004016106299061186e565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd90606401602060405180830381600087803b158015610d7357600080fd5b505af1158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab91906116b0565b5060005460405163095ea7b360e01b81526001600160a01b038681169263095ea7b392610de092909116908790600401611842565b602060405180830381600087803b158015610dfa57600080fd5b505af1158015610e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3291906116b0565b505b6000546001546003546040516106e3936001600160a01b0390811693610e6d9391169189918991889042908b90600019906024016117db565b60408051601f198184030181529190526020810180516001600160e01b0316631186ec3360e01b17905234611166565b6001606d55565b603b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460408051918252602082018390527f5c1bebaca9e5461f515d3939a9ba6c89d486e0b3130fd5f1613bea8312a7349f910160405180910390a1600655565b600854610100900460ff16610f5e5760405162461bcd60e51b81526004016106299061195e565b61056e611196565b600854610100900460ff16610f8d5760405162461bcd60e51b81526004016106299061195e565b61056e6111c6565b600854610100900460ff16610fbc5760405162461bcd60e51b81526004016106299061195e565b61056e6111ed565b806001600160a01b038116610fec5760405163d92e233d60e01b815260040160405180910390fd5b6002546040517fcce6a91bc875435f68407f052fabbcb2cfda2ae841ac4816acf552714fb30adf9161102b916001600160a01b039091169085906117c1565b60405180910390a150600280546001600160a01b0319166001600160a01b0392909216919091179055565b806001600160a01b03811661107e5760405163d92e233d60e01b815260040160405180910390fd5b6004546040517fffd9582901c27177dbd18194ae8017f10d8b21f98a0da2ea5197e0b20dc13d70916110bd916001600160a01b039091169085906117c1565b60405180910390a150600480546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0381166111105760405163d92e233d60e01b815260040160405180910390fd5b7f661459273999943a19efbd948eb50b734e8c71b010cc26221bd1efeffd1dccb58383604051611141929190611842565b60405180910390a1506001600160a01b03909116600090815260056020526040902055565b606061118c848484604051806060016040528060298152602001611acb60299139611220565b90505b9392505050565b600854610100900460ff166111bd5760405162461bcd60e51b81526004016106299061195e565b61056e33610ea4565b600854610100900460ff16610e9d5760405162461bcd60e51b81526004016106299061195e565b600854610100900460ff166112145760405162461bcd60e51b81526004016106299061195e565b609f805460ff19169055565b6060824710156112815760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610629565b843b6112cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610629565b600080866001600160a01b031685876040516112eb91906117a5565b60006040518083038185875af1925050503d8060008114611328576040519150601f19603f3d011682016040523d82523d6000602084013e61132d565b606091505b509150915061133d828286611348565b979650505050505050565b6060831561135757508161118f565b8251156113675782518084602001fd5b8160405162461bcd60e51b8152600401610629919061185b565b80356001600160a01b038116811461139857600080fd5b919050565b60008083601f8401126113ae578081fd5b5081356001600160401b038111156113c4578182fd5b6020830191508360208260051b85010111156113df57600080fd5b9250929050565b60008083601f8401126113f7578182fd5b5081356001600160401b0381111561140d578182fd5b6020830191508360208285010111156113df57600080fd5b600082601f830112611435578081fd5b81356001600160401b038082111561144f5761144f611ab4565b604051601f8301601f19908116603f0116810190828211818310171561147757611477611ab4565b8160405283815286602085880101111561148f578485fd5b8360208701602083013792830160200193909352509392505050565b80356006811061139857600080fd5b8035600781900b811461139857600080fd5b6000602082840312156114dd578081fd5b61118f82611381565b600080600080608085870312156114fb578283fd5b61150485611381565b935061151260208601611381565b925061152060408601611381565b9396929550929360600135925050565b6000806000806000806000806000806000806101208d8f031215611552578788fd5b61155b8d611381565b9b5061156960208e01611381565b9a506001600160401b0360408e01351115611582578788fd5b6115928e60408f01358f0161139d565b909a5098506001600160401b0360608e013511156115ae578788fd5b6115be8e60608f01358f0161139d565b90985096506001600160401b0360808e013511156115da578586fd5b6115ea8e60808f01358f01611425565b95506115f860a08e016114ab565b94506001600160401b0360c08e01351115611611578384fd5b6116218e60c08f01358f016113e6565b909450925061163260e08e016114ba565b91506101008d013590509295989b509295989b509295989b565b600080600060608486031215611660578283fd5b61166984611381565b925061167760208501611381565b9150604084013590509250925092565b60008060408385031215611699578182fd5b6116a283611381565b946020939093013593505050565b6000602082840312156116c1578081fd5b8151801515811461118f578182fd5b6000602082840312156116e1578081fd5b5035919050565b81835260006020808501945082825b85811015611723576001600160a01b0361171083611381565b16875295820195908201906001016116f7565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845261176f816020860160208601611a57565b601f01601f19169290920160200192915050565b600681106117a157634e487b7160e01b600052602160045260246000fd5b9052565b600082516117b7818460208701611a57565b9190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b038981168252881660208201526040810187905260608101869052600785900b608082015263ffffffff841660a082015261010060c0820181905260009061182c83820186611757565b9150508260e08301529998505050505050505050565b6001600160a01b03929092168252602082015260400190565b60208152600061118f6020830184611757565b6020808252601c908201527b4574684d616e616765724c6f6769633a2077726f6e672076616c756560201b604082015260600190565b6101408082526014908201527365786368616e6765466f724274634163726f737360601b610160820152602081018c90526001600160a01b038b811660408301528a1660608201526080810189905261018060a0820181905260009061190d8184018a8c6116e8565b905082810360c08401526119218189611757565b905061193060e0840188611783565b82810361010084015261194481868861172e565b915050826101208301529c9b505050505050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b84815260a06020820152600c60a08201526b7075744269644163726f737360a01b60c082015260e0604082015260006119e560e0830186611757565b6001600160a01b03949094166060830152506080015292915050565b600082611a1c57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611a3b57611a3b611a9e565b500290565b600082821015611a5257611a52611a9e565b500390565b60005b83811015611a72578181015183820152602001611a5a565b8381111561083d5750506000910152565b6000600019821415611a9757611a97611a9e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a2646970667358221220005971895501e3c59cf8d7c2b30a47582f09d7076054906247510e9d1427403d64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "emergencyWithdraw(address,address,uint256)": {
        "details": "Only owner can call this"
      },
      "exchangeForBtcAcross(address,address,uint256[],address[],bytes,uint8,bytes,int64,uint256)": {
        "params": {
          "_amounts": "[inputTokenAmount, teleBTCAmount]",
          "_exchangeConnector": "Address of exchange connector to be used",
          "_lockerLockingScript": "of locker that should execute the burn request",
          "_path": "of exchanging inputToken to teleBTC (these are Polygon token addresses, so _path[0] != _token)",
          "_relayerFeePercentage": "Fee percentage for relayer",
          "_scriptType": "User script type",
          "_token": "Address of input token (on the current chain)",
          "_userScript": "User script hash",
          "thirdParty": "Id of third party"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setMinAmount(address,uint256)": {
        "details": "Exchanging below the min amount is not possible since withdrawing       funds in the case of failure becomes impossible (due to Across bridge fee)"
      },
      "setMinModifier(uint256)": {
        "details": "In the case of network fee changes, instead of       updating min amount for all tokens, we only update this modifier"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "emergencyWithdraw(address,address,uint256)": {
        "notice": "Withdraws tokens in the emergency case"
      },
      "exchangeForBtcAcross(address,address,uint256[],address[],bytes,uint8,bytes,int64,uint256)": {
        "notice": "Requests exchanging token for BTC"
      },
      "setAcross(address)": {
        "notice": "Setter for Across"
      },
      "setMinAmount(address,uint256)": {
        "notice": "Setter for min exchange amount of a token"
      },
      "setMinModifier(uint256)": {
        "notice": "Setter for min amount modifier"
      },
      "setPolygonConnectorProxy(address)": {
        "notice": "Setter for PolygonConnectorProxy"
      },
      "setPolygonTeleBTC(address)": {
        "notice": "Setter for PolygonTeleBTC"
      },
      "setWrappedNativeToken(address)": {
        "notice": "Setter for WrappedNativeToken"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22826,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "across",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 22828,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "polygonConnectorProxy",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 22830,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "polygonTeleBTC",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 22832,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "targetChainId",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 22834,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "wrappedNativeToken",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 22838,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "minAmounts",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 22840,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "minModifier",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 22842,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "uniqueCounter",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 326,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "_initialized",
        "offset": 0,
        "slot": "8",
        "type": "t_uint8"
      },
      {
        "astId": 329,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "_initializing",
        "offset": 1,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 1797,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "__gap",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 198,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "_owner",
        "offset": 0,
        "slot": "59",
        "type": "t_address"
      },
      {
        "astId": 318,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "__gap",
        "offset": 0,
        "slot": "60",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 631,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "_status",
        "offset": 0,
        "slot": "109",
        "type": "t_uint256"
      },
      {
        "astId": 700,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "__gap",
        "offset": 0,
        "slot": "110",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 510,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "_paused",
        "offset": 0,
        "slot": "159",
        "type": "t_bool"
      },
      {
        "astId": 615,
        "contract": "contracts/routers/EthConnectorLogic.sol:EthConnectorLogic",
        "label": "__gap",
        "offset": 0,
        "slot": "160",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}